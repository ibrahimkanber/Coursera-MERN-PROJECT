[{"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\index.js":"1","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\App.js":"2","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\reportWebVitals.js":"3","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\dishes.js":"4","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\MenuComponent.js":"5","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\MainComponent.js":"7","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\HeaderComponent.js":"8","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\FooterComponent.js":"9","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\HomeComponent.js":"10","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\ContactComponent.js":"11","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\comments.js":"12","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\leaders.js":"13","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\promotions.js":"14","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderCard.js":"15","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderDish.js":"16","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderComments.js":"17","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\AboutUs.js":"18","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderLeader.js":"19","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\configureStore.js":"20","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\dishes.js":"21","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\leaders.js":"22","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\promotions.js":"23","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\comments.js":"24","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\ActionTypes.js":"25","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\ActionCreators.js":"26","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\LoadingComponent.js":"27","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\baseUrl.js":"28"},{"size":820,"mtime":1609928585314,"results":"29","hashOfConfig":"30"},{"size":240,"mtime":1609928587864,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1609497117450,"results":"32","hashOfConfig":"30"},{"size":1490,"mtime":1609663469812,"results":"33","hashOfConfig":"30"},{"size":1538,"mtime":1609919664770,"results":"34","hashOfConfig":"30"},{"size":1625,"mtime":1609920104323,"results":"35","hashOfConfig":"30"},{"size":2316,"mtime":1609921388644,"results":"36","hashOfConfig":"30"},{"size":5721,"mtime":1609746701268,"results":"37","hashOfConfig":"30"},{"size":2664,"mtime":1609596154143,"results":"38","hashOfConfig":"30"},{"size":955,"mtime":1609920684020,"results":"39","hashOfConfig":"30"},{"size":9007,"mtime":1609865668165,"results":"40","hashOfConfig":"30"},{"size":4279,"mtime":1609663589817,"results":"41","hashOfConfig":"30"},{"size":2382,"mtime":1609663561697,"results":"42","hashOfConfig":"30"},{"size":445,"mtime":1609663542859,"results":"43","hashOfConfig":"30"},{"size":896,"mtime":1609921437059,"results":"44","hashOfConfig":"30"},{"size":531,"mtime":1609920101686,"results":"45","hashOfConfig":"30"},{"size":4327,"mtime":1609958711621,"results":"46","hashOfConfig":"30"},{"size":3832,"mtime":1609928154605,"results":"47","hashOfConfig":"30"},{"size":613,"mtime":1609704369551,"results":"48","hashOfConfig":"30"},{"size":556,"mtime":1609878414178,"results":"49","hashOfConfig":"30"},{"size":600,"mtime":1609878375838,"results":"50","hashOfConfig":"30"},{"size":176,"mtime":1609865433256,"results":"51","hashOfConfig":"30"},{"size":622,"mtime":1609919175745,"results":"52","hashOfConfig":"30"},{"size":762,"mtime":1609921221268,"results":"53","hashOfConfig":"30"},{"size":380,"mtime":1609917667781,"results":"54","hashOfConfig":"30"},{"size":3403,"mtime":1609959406279,"results":"55","hashOfConfig":"30"},{"size":217,"mtime":1609878745310,"results":"56","hashOfConfig":"30"},{"size":45,"mtime":1609917377184,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"122getp",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\index.js",[],["121","122"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\App.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\reportWebVitals.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\dishes.js",[],["123","124"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\MenuComponent.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\DishdetailComponent.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\MainComponent.js",["125","126","127","128","129"],"import {useState,useEffect} from \"react\"\r\nimport { MenuComponent } from './MenuComponent';\r\n\r\nimport { HeaderComponent } from \"./HeaderComponent\";\r\nimport { FooterComponent } from \"./FooterComponent\";\r\nimport { Switch,Route,Redirect } from \"react-router-dom\";\r\nimport { HomeComponent } from \"./HomeComponent\";\r\nimport { Contact } from \"./ContactComponent\";\r\nimport {DishdetailComponent} from \"./DishdetailComponent\"\r\nimport About from \"./AboutUs\";\r\n\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport {fetchDishes,fetchComments,fetchPromos} from \"../redux/ActionCreators\"\r\n\r\n\r\n\r\nfunction Main() {\r\n  const {dishes,leaders,comments,promotions}=useSelector(state=>state)\r\n\r\n  const dispatch=useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDishes())\r\n    dispatch(fetchComments())\r\n    dispatch(fetchPromos())\r\n  \r\n  }, [])\r\n\r\n\r\n \r\n\r\n\r\n  const HomePage=()=>{\r\n    return(\r\n      <HomeComponent \r\n        dish={dishes.dishes.filter(dish=>dish.featured)[0]}\r\n        dishesLoading={dishes.isLoading}\r\n        errMess={dishes.errorMessage}\r\n        promotion={promotions.promotions.filter(promo=>promo.featured)[0]}\r\n        promosLoading={promotions.isLoading}\r\n        promosErrMess={promotions.errorMessage}\r\n        leader={leaders.filter(lead=>lead.featured)[0]}\r\n        />\r\n    )\r\n  }\r\n\r\n  const DishWithId=({match})=>{\r\n    return(\r\n      <DishdetailComponent \r\n      dishesLoading={dishes.isLoading}\r\n      dish={dishes.dishes.filter(dish=>dish.id==parseInt(match.params.id,10))[0]}\r\n      errMess={dishes.errorMessage}\r\n      comments={comments.comments.filter(comment=>comment.dishId==parseInt(match.params.id,10))}\r\n      errMess={comments.errorMessage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const AboutUs=()=>{\r\n    return(\r\n      <About leaders={leaders}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HeaderComponent/>\r\n      <Switch>\r\n\r\n        <Route path=\"/home\" component={HomePage}/>\r\n\r\n        <Route exact path =\"/menu\" component={()=><MenuComponent dishes={dishes} />}/>\r\n\r\n        <Route path=\"/menu/:id\" component={DishWithId}/>\r\n\r\n        <Route exact path =\"/contactus\" component={Contact}/>\r\n\r\n        <Route exact path =\"/aboutus\" component={AboutUs}/>\r\n\r\n        <Redirect to=\"/home\" />\r\n      </Switch>\r\n     \r\n      <FooterComponent/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\HeaderComponent.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\FooterComponent.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\HomeComponent.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\ContactComponent.js",["130"],"import {\r\n    Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col,  FormFeedback\r\n} from 'reactstrap';\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { Link } from \"react-router-dom\"\r\nimport * as Yup from \"yup\";\r\nexport const Contact = (props) => {\r\n\r\n    const contactUsSchema = Yup.object().shape({\r\n        email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n        firstName: Yup.string()\r\n            .required(\"Please enter your name.\")\r\n            .min(2, \"Please enter valid name\"),\r\n        lastName: Yup.string()\r\n            .required(\"Please enter your  last name\")\r\n            .min(2, \"Please enter valid name\"),\r\n        feedback: Yup.string()\r\n            .required(\"Please enter your feedback\"),\r\n        telnum: Yup.number()\r\n            .required(\"Please enter your feedback\")\r\n\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            telnum: \"\",\r\n            email: \"\",\r\n            contactType: \"\",\r\n            agree: false,\r\n            feedback: \"\"\r\n        },\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values, null, 2));\r\n        },\r\n        validationSchema: contactUsSchema\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>\r\n                        Contact Us\r\n                </BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    id=\"firstname\"\r\n                                    name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    invalid={formik.errors.firstName}\r\n\r\n                                    {...formik.getFieldProps('firstName')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.firstName}</FormFeedback>\r\n                            </Col>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    id=\"lastname\"\r\n                                    name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    invalid={formik.errors.lastName}\r\n                                    {...formik.getFieldProps('lastName')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.lastName}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"tel\"\r\n                                    id=\"telnum\"\r\n                                    name=\"telnum\"\r\n                                    invalid={formik.errors.telnum}\r\n                                    placeholder=\"Tel. Num\"\r\n                                    {...formik.getFieldProps('telnum')}\r\n                                />\r\n\r\n                                <FormFeedback>{formik.errors.telnum}</FormFeedback>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"E mail\"\r\n                                    invalid={formik.errors.email}\r\n                                    {...formik.getFieldProps('email')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.email}</FormFeedback>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{ size: 6, offset: 2 }}>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            name=\"agree\"\r\n\r\n                                            {...formik.getFieldProps('agree')}\r\n\r\n                                        />{\" \"}\r\n\r\n                                        <strong>May we contact you</strong>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={{ size: 3, offset: 1 }}>\r\n                                <Input type=\"select\" name=\"contactType\" {...formik.getFieldProps('contactType')}>\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    id=\"message\"\r\n                                    name=\"message\"\r\n                                    placeholder=\"Feedback\"\r\n                                    rows=\"12\"\r\n                                    invalid={formik.errors.feedback}\r\n                                    {...formik.getFieldProps('feedback')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.feedback}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{ size: 10, offset: 2 }}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                               </Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\comments.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\leaders.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\promotions.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderCard.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderDish.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderComments.js",["131"],"import React,{useState} from 'react'\r\nimport {\r\n    Card, CardText,\r\n    CardTitle, Button,Modal,ModalBody,ModalHeader,Form,FormGroup,Input,FormFeedback, Label\r\n} from 'reactstrap';\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\"\r\nimport {postComment,fetchDishes} from \"../redux/ActionCreators\"\r\n\r\nexport const RenderComments = ({ comments,dishId }) => {\r\n   \r\n    const [isModalOpen, setModalOpen] = useState(false)\r\n    const dispatch=useDispatch()\r\n    const commentSchema=Yup.object().shape({\r\n        name:Yup.string().required().min(3,\"Must be greater than 2 characters\").max(15,\"Must be  15 characters or less\"),\r\n\r\n    })\r\n\r\n    const formik=useFormik({\r\n        initialValues:{\r\n            rating:1,\r\n            name:\"\",\r\n            comment:\"\"\r\n        },\r\n        validationSchema:commentSchema,\r\n        onSubmit:values=>{\r\n            console.log(values)\r\n            setModalOpen(false)\r\n            dispatch(postComment(dishId,+ values.rating,values.name,values.comment))\r\n        }\r\n    })\r\n\r\n    const toggleModal = () => {\r\n        setModalOpen(isModalOpen => !isModalOpen)\r\n    }\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\" >\r\n            <Card >\r\n                <CardTitle>Comments</CardTitle>\r\n                {\r\n                    comments.map((comment, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <CardText style={{ textAlign: \"left\" }}>{comment.comment}</CardText>\r\n                                <CardText style={{ textAlign: \"left\" }}>--{comment.author}--\r\n                               {new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" }).format(new Date(Date.parse(comment.date)))}</CardText>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n               \r\n            </Card>\r\n            <Button outline size=\"mg\" className=\"mt-3\" onClick={toggleModal}>\r\n                    <span className=\"fa fa-pencil\"></span> Submit Comment\r\n            </Button>\r\n            <Modal isOpen={isModalOpen} toggle={toggleModal} >\r\n                <ModalHeader toggle={toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Input \r\n                            type=\"select\" \r\n                            id=\"rating\"\r\n                           \r\n                            {...formik.getFieldProps('rating')}\r\n                            >\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                            </Input>\r\n                           \r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"name\">Your Name</Label>\r\n                            <Input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                             invalid={formik.errors.name}\r\n\r\n                             {...formik.getFieldProps('name')}\r\n                             />\r\n                            <FormFeedback>{formik.errors.name}</FormFeedback>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Input\r\n                            id=\"comment\"\r\n                            type=\"textarea\"\r\n                            rows={6}\r\n                            {...formik.getFieldProps('comment')}\r\n                            />\r\n                            <FormFeedback></FormFeedback>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\" className=\"bg-primary\">Submit</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\AboutUs.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\RenderLeader.js",[],["132","133"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\configureStore.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\dishes.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\leaders.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\promotions.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\comments.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\ActionTypes.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\redux\\ActionCreators.js",["134","135","136"],"import * as ActionTypes from \"./ActionTypes\";\r\n\r\nimport { baseUrl } from \"../shared/baseUrl\"\r\nimport axios from \"axios\"\r\n\r\nexport const addComment = (comment) => {\r\n \r\n    return {\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport const postComment=(dishId, rating, author, comment)=>(dispatch)=>{\r\n        const newComment={\r\n            dishId,rating, author, comment\r\n        }\r\n\r\n        newComment.date=new Date().toISOString()\r\n\r\n        return axios.post(baseUrl + \"comments\",{\r\n            dishId,rating, author, comment,\r\n            date:new Date().toISOString()\r\n        }).then(res=>dispatch(addComment(res.data)))\r\n        .catch(err=>dispatch(dishesFailed(err.message)))\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return axios.get(baseUrl + \"dishes\")\r\n        .then(res => {\r\n            if (res.statusText == \"OK\") {\r\n                return res\r\n            }else{\r\n                let error=new Error(\"Error\"+res.status+\" :\"+res.statusText)\r\n                error.response=res\r\n                throw error\r\n            }\r\n        },\r\n        error=>{\r\n            let errmess=new Error(error.message)\r\n            throw errmess\r\n        }\r\n\r\n        ).then(res=>dispatch(addDishes(res.data)))\r\n        .catch(err=>dispatch(dishesFailed(err.message)))\r\n\r\n}\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n\r\n})\r\nexport const dishesFailed = (errormessage) => ({\r\n    type: ActionTypes.DISHES_FAIL,\r\n    payload: errormessage\r\n\r\n})\r\n\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return axios.get(baseUrl + \"comments\")\r\n    .then(res => {\r\n        if (res.statusText == \"OK\") {\r\n            return res\r\n        }else{\r\n            let error=new Error(\"Error\"+res.status+\" :\"+res.statusText)\r\n            error.response=res\r\n            throw error\r\n        }\r\n    },\r\n    error=>{\r\n        let errmess=new Error(error.message)\r\n        throw errmess\r\n    })\r\n    .then(res=>dispatch(addComments(res.data)))\r\n    .catch(err=>dispatch(commentsFailed(err.message)))\r\n\r\n}\r\n\r\nexport const commentsFailed = (errormessage) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errormessage\r\n\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\n\r\n////promos\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true))\r\n\r\n    return axios.get(baseUrl + \"promotions\")\r\n    .then(res => {\r\n        if (res.statusText == \"OK\") {\r\n            return res\r\n        }else{\r\n            let error=new Error(\"Error\"+res.status+\" :\"+res.statusText)\r\n            error.response=res\r\n            throw error\r\n        }\r\n    },\r\n    error=>{\r\n        let errmess=new Error(error.message)\r\n        throw errmess\r\n    })\r\n    .then(res=>dispatch(addPromos(res.data)))\r\n    .catch(err=>dispatch(promosFailed(err)))\r\n\r\n\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n\r\n})\r\nexport const promosFailed = (errormessage) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errormessage\r\n\r\n})\r\n\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\components\\LoadingComponent.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\coursera\\src\\shared\\baseUrl.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":9,"nodeType":"145","messageId":"146","endLine":1,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":28,"column":6,"nodeType":"149","endLine":28,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":52,"column":47,"nodeType":"153","messageId":"154","endLine":52,"endColumn":49},{"ruleId":"151","severity":1,"message":"152","line":54,"column":65,"nodeType":"153","messageId":"154","endLine":54,"endColumn":67},{"ruleId":"155","severity":1,"message":"156","line":55,"column":7,"nodeType":"157","endLine":55,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":81,"column":25,"nodeType":"160","endLine":81,"endColumn":67},{"ruleId":"143","severity":1,"message":"161","line":10,"column":21,"nodeType":"145","messageId":"146","endLine":10,"endColumn":32},{"ruleId":"137","replacedBy":"162"},{"ruleId":"139","replacedBy":"163"},{"ruleId":"151","severity":1,"message":"152","line":33,"column":32,"nodeType":"153","messageId":"154","endLine":33,"endColumn":34},{"ruleId":"151","severity":1,"message":"152","line":74,"column":28,"nodeType":"153","messageId":"154","endLine":74,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":110,"column":28,"nodeType":"153","messageId":"154","endLine":110,"endColumn":30},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fetchDishes' is defined but never used.",["164"],["165"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch]",{"range":"169","text":"170"},[837,839],"[dispatch]"]